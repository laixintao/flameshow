name: Test

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [ubuntu-latest, macos-latest]
        # python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12"]
        python-version: ["3.10", "3.11", "3.12"]

        # see https://github.com/actions/setup-python/issues/948
        exclude:
          - os: macos-latest
            python-version: "3.10"
          - os: macos-latest
            python-version: "3.11"
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v3.5.2
      - name: Install and configure Poetry # This could be cached, too...
        uses: snok/install-poetry@v1.3.3
        with:
          version: 1.4.2
          virtualenvs-in-project: true
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          allow-prereleases: true
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key:
            venv-${{ runner.os }}-${{ matrix.python-version }}-${{
            hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

      - name: Test with pytest
        run: |
          source $VENV
          pytest tests -v --cov=./flameshow --cov-report=xml:./coverage.xml --cov-report term-missing

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
